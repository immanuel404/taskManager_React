{"version":3,"sources":["components/layout/signedInLinks.js","store/actions/authActions.js","components/layout/signedOutLinks.js","components/layout/navbar.js","components/dashboard/notification.js","components/projects/projectSummary.js","components/projects/projectList.js","components/dashboard/dashboard.js","components/projects/projectDetails.js","components/auth/signIn.js","components/auth/signUp.js","components/projects/createProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","projects","map","project","now","authorFirstName","key","id","moment","createdAt","toDate","toString","calendar","ProjectSummary","title","authorLastName","ProjectList","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","ownProps","match","params","data","content","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","CreatProject","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.5080a058.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><NavLink to=\"/\" onClick={props.signOut}>Log Out</NavLink></li>\r\n            <li><NavLink to=\"/\" className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">SignUp</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './signedInLinks'\r\nimport SignedOutLinks from './signedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"containerz\">Task Manager</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n// import ProjectList from '../projects/projectList'\r\n\r\nconst Notifications = (props) => {\r\n    const {projects} = props;\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        <li>New notification will be placed here...</li>\r\n\r\n                        {projects && projects.map(project => {    \r\n                            const name = project.authorFirstName;\r\n                            const now = name;\r\n                            return (\r\n                                <div key={project.id} className=\"blue-text note-date\"> \r\n                                <li> {now} added a project...\r\n                                    {moment(project.createdAt.toDate().toString()).calendar()}\r\n                                </li>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            <div className=\"card z-depth-0 grey-text text-darken-3\">\r\n                <span className=\"card-title\">\r\n                <h5>{project.title}</h5></span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './projectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return(\r\n                    <div key={project.id} className=\"contain\">\r\n                        <Link to={'/project/' + project.id} >\r\n                        <ProjectSummary project={project} />\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './notification'\r\nimport ProjectList from '../projects/projectList'\r\nimport { connect } from 'react-redux'\r\nimport {firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    \r\n    render() {\r\n\r\n        const { projects, auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                    <ProjectList projects={projects} />\r\n                        <ProjectList />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications projects={projects} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] }\r\n        // Note: to set limit of returned data use 'limit' example:\r\n        // { collection: 'projects', limit: 2, orderBy: ['createdAt', 'desc'] }\r\n    ]) \r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux' \r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\"> {project.title} </span>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState ({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState ({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: \"CREATE_PROJECT\", project });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n    }\r\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/navbar'\nimport Dashboard from './components/dashboard/dashboard'\nimport ProjectDetails from './components/projects/projectDetails'\nimport SignIn from \"./components/auth/signIn\"\nimport SignUp from \"./components/auth/signUp\"\nimport CreatProject from \"./components/projects/createProject\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreatProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state=initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login error');\r\n            return {\r\n                ...state,\r\n                authError: \"Login failed\"\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                authError: action.err.message\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'title-1', content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'},\r\n        {id: '2', title: 'title-2', content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'},\r\n        {id: '3', title: 'title-3', content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state=initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from \"./authReducer\"\r\nimport projectReducer from \"./projectReducer\"\r\nimport  { combineReducers } from 'redux'\r\nimport  { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from  'react-redux-firebase'\r\n \r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyCohfTUf9NEkXvIKwkFvhgsJNNsrQ-1lTE\",\r\n    authDomain: \"task-manager-3b744.firebaseapp.com\",\r\n    databaseURL: \"https://task-manager-3b744.firebaseio.com\",\r\n    projectId: \"task-manager-3b744\",\r\n    storageBucket: \"task-manager-3b744.appspot.com\",\r\n    messagingSenderId: \"1000557078292\",\r\n    appId: \"1:1000557078292:web:fd9914ca69c2e2cf7f4401\",\r\n    measurementId: \"G-5EZM0323PZ\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  // firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\n  export default firebase; \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig' \n\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}><App /></Provider>, document.getElementById('root')\n  );\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}